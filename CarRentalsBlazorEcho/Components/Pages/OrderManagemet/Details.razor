@page "/OrderManagement/Details/{orderId:int}"
@using CarRentalsBlazorEcho.Data
@using CarRentalsBlazorEcho.Models
@inject IUser UserRepository
@inject IOrder OrderRepository
@inject ICar CarRepository
@inject ICarPicture CarPictureRepository
@inject NavigationManager NavigationManager

<h4>Order Details</h4>
@if (CurrentUser.IsAdmin)
{
    @if (order != null && user != null && car != null)
    {
        <p>Ordernr:    @order.OrderId</p>
        <p>Date:       @order.StartDate.ToString("dd/MM/yyyy") - @order.EndDate.ToString("dd/MM/yyyy")</p>

        <h4>Customer</h4>

        <p>Customernr: @user.UserId</p>
        <p>Name:       @user.FullName</p>
        <p>Email:      @user.Email</p>

        <h4>Car</h4>

        <p>Carnr:      @car.CarId</p>
        <p>Brand:      @car.Brand</p>
        <p>Model:      @car.Model</p>
        <p>
            <img src=@carPictures.FirstOrDefault(p=>p.CarId==car.CarId).PictureUrl height="200px" />
        </p>
    }
    else
    {
        <p>Loading...</p>
    }
}
else
{
    @if (order != null && user != null && car != null)
    {
        <p>Ordernr:    @order.OrderId</p>
        <p>Date:       @order.StartDate.ToString("dd/MM/yyyy") - @order.EndDate.ToString("dd/MM/yyyy")</p>

        <p>@car.Brand @car.Model</p>
        <p>
            <img src=@carPictures.FirstOrDefault(p=>p.CarId==car.CarId).PictureUrl height="200px" />
        </p>
    }
    else
    {
        <p>Loading...</p>
    }
}

<button class="btn btn-primary" @onclick="Return">Return</button>

@code {
    private IEnumerable<CarPicture> carPictures { get; set; } = new List<CarPicture>();
    private User user;
    private Car car;
    private Order order;

    [Parameter]
    public int orderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        order = await OrderRepository.GetByIdAsync(orderId);
        user = await UserRepository.GetByIdAsync(order.UserId);
        car = await CarRepository.GetByIdAsync(order.CarId);
        carPictures = await CarPictureRepository.GetAllAsync();
    }

    private void Return()
    {
        NavigationManager.NavigateTo("/Orders");
    }
}
