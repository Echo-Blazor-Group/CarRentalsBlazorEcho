@page "/Users"
@using CarRentalsBlazorEcho.Data
@using CarRentalsBlazorEcho.Models
@inject NavigationManager NavigationManager

@inject IUser UserRepository

<h1>Users</h1>

<table class="table long">
    <thead>
        <tr>
            <th>
                Customer Id
            </th>
            <th>
                FirstName
            </th>
            <th>
                LastName
            </th>
            <th>
                Email
            </th>
            <th>
                Password
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>
                    @user.UserId
                </td>
                <td>
                    @user.FirstName
                </td>
                <td>
                    @user.LastName
                </td>
                <td>
                    @user.Email
                </td>
                <td>
                    @user.Password
                </td>
                <td>
                    @if (CurrentUser.IsAdmin == true)
                    {
                        <button @onclick="() => UserDetails(user)">Details</button>
                        <button @onclick="() => EditUser(user)">Edit</button>
                        <button @onclick="() => DeleteUser(user)">Delete</button>
                    }
                </td>
            </tr>
        }
        
    </tbody>
</table>

@code {
    private IEnumerable<User> users { get; set; } = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        users = await UserRepository.GetAllAsync();
    }

    private void EditUser(User users)
    {
        NavigationManager.NavigateTo($"/UserCRUD/UserEdit/{users.UserId}");
    }
    private void UserDetails(User users)
    {
        NavigationManager.NavigateTo($"//{users.UserId}");
    }
    private void DeleteUser(User users)
    {
        NavigationManager.NavigateTo($"//{users.UserId}");
    }
}