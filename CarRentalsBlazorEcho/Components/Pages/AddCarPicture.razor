@attribute [StreamRendering]
@page "/AddCarPicture/{CarId:int}"
@rendermode InteractiveAuto
@using CarRentalsBlazorEcho.Models
@using CarRentalsBlazorEcho.Data
@inject ICarPicture _CarPictures;
@inject NavigationManager Navigation;

<h3>Car Picture</h3>
<h3>Add:</h3>

<form method="post" @onsubmit="Submit" @formname="AddCarPicture">
    <div>
        <label>
            Picture Url:
            <InputText @bind-Value="Picture!.PictureUrl" />
        </label>
    </div>
    <div>
        <button type="submit">Submit</button>
    </div>
</form>
@if (this.ErrorMessage != string.Empty)
{
    <div class="alert alert-danger">
        <strong>Error!</strong> @this.ErrorMessage
    </div>
    this.ErrorMessage = string.Empty;
}
<br />
<button class="btn btn-outline-primary" @onclick="NavigateReturn">Return</button>
 
@code {
    [Parameter]
    public int CarId { get; set; }
    [SupplyParameterFromForm]
    public CarPicture? Picture { get; set; }
    protected override void OnInitialized() => Picture ??= new() { CarId = this.CarId };
    public string ErrorMessage { get; set; } = string.Empty;

    private async Task Submit()
    {
        if (Picture == null || Picture.PictureUrl == string.Empty)
        {
            this.ErrorMessage = "Add car picture failed.";
        } 
        else
        {
            await _CarPictures.AddAsync(Picture);
            NavigateReturn();
        }
    }

    private void NavigateReturn()
    {
        Navigation.NavigateTo($"/EditCar/{CarId}");
    }
}
